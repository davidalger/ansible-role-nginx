# {{ ansible_managed }}

{## Upgrade insecure requests ##}
server {
    listen 80;
    server_name {{ vhost_params.server_name.replace("www.", ".") }};
    return 301 https://$host$request_uri;
}

{## If the domain has www. prefix, setup a redirect to 301 non-www to www ##}
{% if "www." in vhost_params.server_name %}
server {
    listen 443 ssl http2;

    ssl_certificate /etc/nginx/ssl/{{ vhost_params.server_name }}.crt;
    ssl_certificate_key /etc/nginx/ssl/{{ vhost_params.server_name }}.key;
{#
     # verify chain of trust of OCSP response using Root CA and Intermediate certs
     #ssl_trusted_certificate /path/to/root_CA_cert_plus_intermediates;
     #ssl_trusted_certificate /etc/letsencrypt/live/example.com/chain.pem;
#}

    server_name {{ vhost_params.server_name.replace("www.", "") }};

    include /etc/nginx/default.d/secure.conf;
    return 301 $scheme://{{ vhost_params.server_name }}$request_uri;
}

{% endif %}
{## This is where the magic happens ##}
server {
    listen 443 ssl http2;

    ssl_certificate /etc/nginx/ssl/{{ vhost_params.server_name }}.crt;
    ssl_certificate_key /etc/nginx/ssl/{{ vhost_params.server_name }}.key;
{#
     # verify chain of trust of OCSP response using Root CA and Intermediate certs
     #ssl_trusted_certificate /path/to/root_CA_cert_plus_intermediates;
     #ssl_trusted_certificate /etc/letsencrypt/live/example.com/chain.pem;
#}

    server_name {{ vhost_params.server_name }};
    root {{ vhost_params.webroot }};

    set $proxy_host {{ vhost_params.proxy_host|default('127.0.0.1') }};
    set $proxy_port {{ vhost_params.proxy_port }};

    access_log /var/log/nginx/{{ vhost_params.server_name }}-access.log main;
    error_log /var/log/nginx/{{ vhost_params.server_name }}-error.log warn;

    set $maintenance off;
    if (-f {{ vhost_params.maintenance_flag|default('/etc/nginx/maintenance.enable') }}) {
        set $maintenance on;
    }

    if ($remote_addr ~ ({{ maintenance_bypass|default(nginx_maintenance_bypass) }})) {
        set $maintenance off;
    }

    if ($maintenance = on) {
        return 503;
    }
    error_page 503 @maintenance;

    location / {
        include /etc/nginx/available.d/proxypass.conf;
{% if vhost_params.basicauth|default(false) %}
        include /etc/nginx/available.d/basicauth.conf;
{% endif %}
    }
{% if vhost_params.basicauth|default(false) %}

    # bypass basicauth on these so integrations will work properly
    location ~* ^/(index\.php/)?(rest|soap|paypal/ipn)/ {
        include /etc/nginx/available.d/proxypass.conf;
    }
{% endif %}

    location @maintenance {
        try_files {{ vhost_params.maintenance_file|default('/maintenance.html') }} =503;

        add_header Cache-Control "no-store, no-cache, must-revalidate, max-age=0" always;
        add_header Pragma "no-cache" always;
    }
    location {{ vhost_params.maintenance_file|default('/maintenance.html') }} {}

{% for file in vhost_includes %}
    include /etc/nginx/{{ file }};
{% endfor %}
}
