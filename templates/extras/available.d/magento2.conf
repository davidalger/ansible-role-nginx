# {{ ansible_managed }}

set $MAGE_RUN_CODE $store_code;
set $MAGE_RUN_TYPE store;
set $MAGE_MODE production;

location ~* ^/media/(customer|downloadable|import|theme_customization/.*\.xml)/ { return 403; }
location ~* ^/errors/.*\.xml$ { return 403; }
location ~* ^/(setup|update)/ { return 403; }
location ~* /\. { return 403; }

# Static files should not use /pub prefix; prevents 404 requests from flooding php-fpm due to bad integrations and bots
location ~* ^/pub/media/ { return 404; }
location ~* ^/pub/static/ { return 404; }

location / {
    try_files $uri $uri/ /index.php$is_args$args;
}

location /robots.txt {
    try_files /robots.txt /robots/${MAGE_RUN_CODE}_robots.txt =404;
}

location /sitemap.xml {
    try_files /sitemaps/${MAGE_RUN_CODE}_sitemap.xml =404;
}

location /static/ {
    try_files $uri =404;

    if ($request_method = OPTIONS ) {
      add_header Access-Control-Allow-Origin "*";
      add_header Access-Control-Allow-Methods "GET, HEAD, OPTIONS";
      add_header Access-Control-Allow-Headers "X-Requested-With";
      add_header Access-Control-Max-Age 2592000;                        # Cache pre-flight info for 30 days
      add_header Content-Type "text/plain; charset=utf-8";
      add_header Content-Length 0;

      return 204;
    }

    # Default headers and expires policy
    add_header Cache-Control "public";
    add_header X-Frame-Options "SAMEORIGIN";
    add_header Access-Control-Allow-Origin "*";     # Allow use from CDN origin
    expires +1y;

    # Remove signature of the static files that is used to overcome the browser cache
    location ~ ^/static/version {
        rewrite ^/static/(version\d*/)?(.*)$ /static/$2 last;
    }

    # Support client managed microsite skins
    location ~* ^/static/microskin.css$ {
        try_files /microsite/${MAGE_RUN_CODE}_skin.css /microsite/default_skin.css =404;
    }

    # These files types should not be cached by proxies or browsers
    location ~* \.(zip|gz|gzip|bz2|csv|xml)$ {
        add_header Cache-Control "no-store";
        add_header X-Frame-Options "SAMEORIGIN";
        expires    off;
    }
}

location /media/ {
    try_files $uri $uri/ /get.php$is_args$args;

    # Default headers and expires policy
    add_header X-Frame-Options "SAMEORIGIN";

    location ~* \.(ico|jpg|jpeg|png|gif|svg|js|css|swf|eot|ttf|otf|woff|woff2)$ {
        add_header Cache-Control "public";
        add_header X-Frame-Options "SAMEORIGIN";
        add_header Access-Control-Allow-Origin "*";     # Allow use from CDN origin
        expires +1y;
        try_files $uri $uri/ /get.php$is_args$args;
    }

    location ~* \.(zip|gz|gzip|bz2|csv|xml)$ {
        add_header Cache-Control "no-store";
        add_header X-Frame-Options "SAMEORIGIN";
        expires    off;
        try_files $uri $uri/ /get.php$is_args$args;
    }
}

location ~ ^/(index|get|static|errors/report|errors/404|errors/503|health_check|health|phpinfo)\.php$ {
    try_files $uri =404;

    fastcgi_pass $fastcgi_backend;

    fastcgi_buffers 1024 4k;
    fastcgi_buffer_size 128k;
    fastcgi_busy_buffers_size 256k;
    fastcgi_read_timeout 3600s;

    include fastcgi_params;

    fastcgi_param HTTPS $fastcgi_https;

    fastcgi_param MAGE_RUN_CODE $MAGE_RUN_CODE;
    fastcgi_param MAGE_RUN_TYPE $MAGE_RUN_TYPE;
    fastcgi_param MAGE_MODE $MAGE_MODE;

    fastcgi_param PHP_IDE_CONFIG serverName=$host;

    fastcgi_index index.php;
    fastcgi_param SCRIPT_FILENAME  $realpath_root$fastcgi_script_name;
    fastcgi_param DOCUMENT_ROOT    $realpath_root;
    fastcgi_param SERVER_PORT      $http_x_forwarded_port;
{% if nginx_newrelic_appname %}
    fastcgi_param PHP_VALUE        "newrelic.appname=\"$newrelic_appname;magento-$backend_pool\";";
{% endif -%}
}

# Forbid access to php files not matched in previous location block
location ~* \.php$ { return 403; }
