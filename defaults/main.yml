---

nginx_user: nginx
nginx_pid: /var/run/nginx.pid
nginx_worker_processes: "{{ ansible_processor_vcpus|default(ansible_processor_cores) }}"
nginx_worker_rlimit_nofile: 150000

nginx_groups: []

nginx_logrotate_users: []
nginx_logrotate_group: www-logs

# When true templates will be deployed with automatic newrelic.appname values applied
nginx_newrelic_appname: "{{
  (newrelic_apm_license is defined and newrelic_apm_license)
  or (newrelic_apm_key is defined and newrelic_apm_key)
}}"

nginx_http_config:
  sendfile: "on"
  autoindex: "off"
  tcp_nopush: "on"
  tcp_nodelay: "off"
  keepalive_timeout: "10s"
  keepalive_requests: "100"
  client_header_timeout: "1460s"
  client_body_timeout: "1460s"
  client_max_body_size: "200m"
  reset_timedout_connection: "on"
  fastcgi_read_timeout: "3600s"
  proxy_connect_timeout: "3600s"
  proxy_send_timeout: "3600s"
  proxy_read_timeout: "3600s"
  send_timeout: "1460s"
nginx_http_additional_config: {}

# Default settings in context of server scope via default.d/settings.conf
nginx_server_config:
  client_max_body_size: 25M
nginx_server_additional_config: {}

# Additional IPs (may use CIDR notation) to whitelist for nginx_status, php-status, and ping type endpoints
nginx_status_allow:
  - "{{ ansible_default_ipv4.address }}"

# List of pipe-separated IP addresses for use in match expression bypassing the maintenance page when enabled
nginx_maintenance_bypass: "127.0.0.1"

## Example usage:
#    nginx_extras:
#      - conf.d/map.conf
#
#    nginx_extras:
#      - dest: conf.d/map.conf
#      - src: extras/overrides/conf.d/map.conf
#
# This above two examples demonstrate two ways to specify members of this array. They may be used in
# conjunction with one another or indiviudally.

nginx_extras: []

nginx_vhosts: []

## Example Usage
#    nginx_vhosts:
#      - name:
#        pool:
#        params: (optional)
#          server_name:
#          webroot:
#          maintenance_flag: (optional; defaults to /etc/nginx/maintenance.enable)
#          maintenance_file: (optional; defaults to /maintenance.html)
#          maintenance_bypass: (optional; defaults 'nginx_maintenance_bypass' value or 127.0.0.1 if not set)
#          proxy_port:
#        template: vhost.conf (optional)

# Default vhost includes
nginx_vhost_includes:
  - default.d/*.conf

nginx_backends:
  - name: www-data
    pool: data
    listen: 127.0.0.1:8080
    webroot: /var/www/html/current
    includes: []
#   template: backend.conf (optional)

# Default backend include files
nginx_backend_includes:
  - default.d/settings.conf
  - available.d/php-status.conf

## Example Usage
#    nginx_domain_redirects:
#      - domain: www.example.com       (www prefix is stripped in nginx server_name setting)
#        target: www.target.com
#        include_uri: no (optional; default is no)
#        additional_configs: "include /etc/nginx/default.d/redirects.conf;"  (optional; default is empty)
#        protocol: https (optional; default is $schema which will retain the original request protocol)

nginx_domain_redirects: []

# Session resumption for improved https performance
nginx_ssl_session_cache: shared:SSL:10m
nginx_ssl_session_timeout: 10m

# nginx 1.16.0, intermediate config, OpenSSL 1.0.2k
# Supports Firefox 27, Android 4.4.2, Chrome 31, Edge, IE 11 on Windows 7, Java 8u31,
# OpenSSL 1.0.1, Opera 20, and Safari 9
#
# https://ssl-config.mozilla.org/#server=nginx&server-version=1.16.0&config=intermediate&openssl-version=1.0.2k
#
nginx_ssl_protocols: TLSv1.2
# nginx_ssl_ciphers: EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH
nginx_ssl_ciphers: ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384

# Diffie-Hellman parameters for DHE ciphersuites; default 2048 bit prime used per current NIST standards
nginx_diffie_hellman_bits: 2048

# Configure the HSTS header; value of no/false will remove the header entirely
# nginx_config_hsts: "max-age=63072000; includeSubdomains; preload"
nginx_config_hsts: "max-age=63072000"

# Optional array of additional IPs (may use CIDR notation) to whitelist in basicauth configuration
nginx_conf_auth_allow: []

# Optional array of additional IPs to authorize as proxy relays so that origin IP is interpreted correctly when proxied
nginx_additional_real_ip_from: false
nginx_additional_real_ip_from_list: []
# nginx_additional_real_ip_from: true
# nginx_additional_real_ip_from_list:
#   # CloudFlare IPs https://www.cloudflare.com/ips-v4
#   - 103.21.244.0/22
#   - 103.22.200.0/22
#   - 103.31.4.0/22
#   - 104.16.0.0/12
#   - 108.162.192.0/18
#   - 131.0.72.0/22
#   - 141.101.64.0/18
#   - 162.158.0.0/15
#   - 172.64.0.0/13
#   - 173.245.48.0/20
#   - 188.114.96.0/20
#   - 190.93.240.0/20
#   - 197.234.240.0/22
#   - 198.41.128.0/17

nginx_x_forwarded_for: remote_addr
nginx_sign_task: ssl-selfsign.yml
